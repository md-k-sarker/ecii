// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.daselab.org/ontologies/ADE20K/hcbdwsu#") ]
                    
// knowledge source definition
ks.type = "OWL File"
ks.fileName = "sumo_with_ade_training_r.owl" 
ks.reasoningString = "rule"

// reasoner
//reasoner.type = "closed world reasoner"
//reasoner.sources = { ks }

// modified owlapi reasoner
reasoner.type = "oar"
reasoner.sources = { ks }
reasoner.reasonerImplementation = "hermit"

// learning problem
lp.type = "posNegStandard"
//lp.type = "posonlylp"
lp.positiveExamples = {"ex:River_ADE_train_00015861","ex:River_ADE_train_00015862","ex:River_ADE_train_00015863","ex:River_ADE_train_00015864","ex:River_ADE_train_00015865","ex:River_ADE_train_00015866","ex:River_ADE_train_00015867","ex:River_ADE_train_00015868","ex:River_ADE_train_00015869","ex:River_ADE_train_00015870","ex:River_ADE_train_00015871","ex:River_ADE_train_00015872","ex:River_ADE_train_00015873","ex:River_ADE_train_00015874","ex:River_ADE_train_00015875","ex:River_ADE_train_00015876","ex:River_ADE_train_00015877","ex:River_ADE_train_00015878","ex:River_ADE_train_00015879","ex:River_ADE_train_00015880","ex:River_ADE_train_00015881","ex:River_ADE_train_00015882","ex:River_ADE_train_00015883","ex:River_ADE_train_00015884","ex:River_ADE_train_00015885","ex:River_ADE_train_00015886","ex:River_ADE_train_00015887","ex:River_ADE_train_00015888","ex:River_ADE_train_00015889","ex:River_ADE_train_00015890","ex:River_ADE_train_00015891","ex:River_ADE_train_00015892","ex:River_ADE_train_00015893","ex:River_ADE_train_00015894","ex:River_ADE_train_00015895","ex:River_ADE_train_00015896","ex:River_ADE_train_00015897","ex:River_ADE_train_00015898","ex:River_ADE_train_00015899",
"ex:River_ADE_train_00015900","ex:River_ADE_train_00015901","ex:River_ADE_train_00015902","ex:River_ADE_train_00015903",
"ex:River_ADE_train_00015904","ex:River_ADE_train_00015905" }

lp.negativeExamples = { "ex:Restroom_ADE_train_00015837","ex:Restroom_ADE_train_00015838","ex:Restroom_ADE_train_00015839","ex:Restroom_ADE_train_00015840","ex:Restroom_ADE_train_00015841", "ex:Roof_ADE_train_00015929","ex:Roof_ADE_train_00015930","ex:Roof_ADE_train_00015931","ex:Roof_ADE_train_00015932","ex:Roof_ADE_train_00015933","ex:Ruin_ADE_train_00016026","ex:Ruin_ADE_train_00016027","ex:Ruin_ADE_train_00016028","ex:Ruin_ADE_train_00016029","ex:Ruin_ADE_train_00016030", "ex:Runway_ADE_train_00016039","ex:Runway_ADE_train_00016040","ex:Runway_ADE_train_00016041","ex:Runway_ADE_train_00016042","ex:Runway_ADE_train_00016043","ex:Restaurant_ADE_train_00015793","ex:Restaurant_ADE_train_00015794","ex:Restaurant_ADE_train_00015795","ex:Restaurant_ADE_train_00015796","ex:Restaurant_ADE_train_00015797", "ex:Resort_ADE_train_00015788","ex:Resort_ADE_train_00015789","ex:Resort_ADE_train_00015790","ex:Resort_ADE_train_00015791"}


// learning algorithm
// create learning algorithm to run
la.type = "celoe"
la.maxNrOfResults = 250
la.maxExecutionTimeInSeconds = 1800
